{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-hoki">
            <div class="portlet-title">
                <div class="caption">Event Form</div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form method="post" class="form-horizontal">
                    <div class="form-body">
                        {{ form.hidden('csrf_token',app.session.get('csrf_token')) }}
                        {{ form.group_text('Name', 'event_name', object.getName|default(''), 3, 4, readonly) }}
                        <div class="form-group">
                            <label class="col-md-3 control-label">Rate Type</label>
                            <div class="col-md-5">
                                {{ form.radio_set('rate_type', value_type_opts, object.getType.getID|default('')) }}
                            </div>
                        </div>
                        {{ form.group_number('Rate', 'rate', object.getRate|default(''), 3, 4, readonly) }}
                        <div class="form-group">
                            <label class="col-md-3 control-label">Type</label>
                            <div class="col-md-4">
                                {{ form.radio_set('is_paid', ispaid_opts, object.getIsPaid|default(0)) }}
                            </div>
                        </div>
                        
                        {# ADD SELECTOR IF ALL DAY #}
                        <div class="form-group">
                            <label class="col-md-3 control-label">All-day event</label>
                            <div class="col-md-4">
                                <label  style="padding-top: 5px;">Yes
                               <input type="checkbox" id="cform-allday" name="allday" class="" value="1">
                           </label>
                            </div>
                        </div>
                        <div id="scheduled">
                            {{ form.group_date('Start Date','date_from', object.getDateFrom|date('m/d/Y'),3,4) }}
                            {{ form.hidden('csrf_token',app.session.get('csrf_token')) }}
                            <div class="form-group">
                                <label class="col-md-3 control-label">Start Time</label>
                                <div class ="col-md-4">
                                    <div class="input-group">
                                        <input id="start" type="text" class="form-control timepicker timepicker-no-seconds" name="start" placeholder="Start" value="{{ object.getDateFrom|date('g:i A') }}" readonly>
                                        <span class="input-group-btn">
                                            <button class="btn default" type="button"><i class="fa fa-clock-o"></i></button>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            {{ form.group_date('End Date','date_to', object.getDateTo|date('m/d/Y'),3,4) }}
                            <div class="form-group">
                                <label class="col-md-3 control-label">End Time</label>
                                <div class ="col-md-4">
                                    <div class="input-group">
                                        <input id="end" type="text" class="form-control timepicker timepicker-no-seconds" name="end" placeholder="End" value="{{ object.getDateTo|date('g:i A') }}" readonly>
                                        <span class="input-group-btn">
                                            <button class="btn default" type="button"><i class="fa fa-clock-o"></i></button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            {{ form.group_select('Event Type', 'holiday_type', holiday_opts, '', 3, 4) }}
                        </div>
                        <div id="all_day">
                            {{ form.group_date('Date','event_date', object.getDateFrom|date('m/d/Y'),3,4) }}
                            {{ form.group_select('Event Type', 'event_holiday_type', holiday_opts, '', 3, 4) }}
                        </div>
                    </div>

                    <div class="form-actions fluid">
                        <div class="col-md-offset-3 col-md-9">
                            {% if not readonly %}
                            <button type="submit" class="btn blue">Submit</button>
                            {% endif %}
                            <a href="{{ path(route_list) }}" class="btn default">Go back to list</a>
                        </div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block js %}
<script>
$(document).ready( function() {
    $('.timepicker-no-seconds').timepicker({
        autoclose: true,
        minuteStep: 1
    });

    $("#cform-allday").click(function() {
        if(this.checked) {
            $('#scheduled').hide();
            $('#all_day').show();

        }
        else
        {
            $('#scheduled').show();
            $('#all_day').hide();
        }
    });


    $('#all_day').hide();
    $('.calendar').prop('disabled', true);

    $('#cform-date_from').datepicker({
        autoclose: true,
        // startDate: new Date(),
    });

    $('#cform-date_from').datepicker().on('changeDate', function (ev) {
        if ($('#cform-date_from').val() > $('#cform-date_to').val()){
            $('#cform-date_to').val($('#cform-date_from').val());
            $('#cform-date_to').datepicker({
                todayHighlight: false,
                startDate: $('#cform-date_from').val(),
            });
        }
    });

    $('#start_time').on('change', function () {
        $('#end_time').val($('#start_time').val());
        var min = '10:15:12 am';
        $('#end_time').timepicker({'min': min});
    });



    //set default error and success elements
    jQuery.validator.setDefaults({
        errorClass: 'help-block',
        errorElement: 'span',
        errorPlacement: function(error, element) {
            if(element.parent().parent().hasClass('form-group'))
            {
                error.appendTo(element.parent().last());
                element.parent().parent().addClass('has-error');
            }
            else if(element.parent().parent().hasClass('checker'))
            {
                error.appendTo(element.parent().parent().parent().parent().last());
                element.parent().parent().parent().parent().parent().parent().addClass('has-error');
            }
            else if(element.parent().parent().hasClass('radio'))
            {
                error.appendTo(element.parent().parent().parent().parent().last());
                element.parent().parent().parent().parent().parent().parent().addClass('has-error');
            }
            else
            {
                error.appendTo(element.parent().parent().last());
                element.parent().parent().parent().addClass('has-error');
            }
        },
        success: function(element) {
            if(element.parent().parent().hasClass('form-group'))
            {
                element.parent().parent().removeClass('has-error');
                element.parent().parent().addClass('has-success');
            }
            else if(element.parent().parent().hasClass('checker'))
            {
                element.parent().parent().parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().parent().parent().addClass('has-success');
            }
            else if(element.parent().parent().hasClass('radio'))
            {
                element.parent().parent().parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().parent().parent().addClass('has-success');
            }
            else
            {
                element.parent().parent().parent().removeClass('has-error');
                element.parent().parent().parent().addClass('has-success');
            }

            element.remove();
        }
    });

    jQuery.validator.addMethod("dateGreaterThan", function(value, element, params) {
        if ($(params[0]).val() != '') {
            if (value < $(params[0]).val()) {
                return false;
            } else{
                return true;
            };
        };
    },'Must be greater than {2}.');

    jQuery.validator.addMethod("timeGreaterThan", function(value, element, params) {
        var start = moment($(params[2]).val(), "HH:mm a");
        var end = moment(value, "HH:mm a");
        if ($(params[2]).val() != '') {
            if ($(params[0]).val() == $(params[1]).val()) {
                if (start >= end) {
                    return false;
                } else{
                    return true;
                };
                
            } else {
                return true;
            };
            // if ($(params[0]).val() == $(params[1]).val()) {
            //     return value > $(params[2]).val();
            // }
        };
        // return true;
    },'Must be greater than {3}.');

    // validate form elements
    $(".form-horizontal").validate({
        onfocusout: function(element) {
           this.element(element);
        },
        rules: {
            event_name: "required",
            rate: "required",
            rate_type: "required",
            is_paid: "required",
            date_from: "required",
            date_to: {
                required: true,
                dateGreaterThan: ["#cform-date_from", "#cform-date_to", "Start Date"]
            },
            start: "required",
            end: {
                required: true,
                timeGreaterThan: ["#cform-date_from", "#cform-date_to", "#start", "Start Time"]
            }
        },
        messages: {
            event_name: "Event name cannot be blank.",
        },
        submitHandler: function(form) {
            form.submit();
        }
    });
});
</script>
{% endblock %}
