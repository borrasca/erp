{% extends "GistTemplateBundle::base.html.twig" %}
{% import "GistTemplateBundle::form.html.twig" as form %}

{% block content %}
    <div class="row">
        <div class="col-md-12">
            <div class="portlet box blue-hoki">
                <div class="portlet-title">
                    <div class="caption">Tax Entry Form</div>
                </div>
                <div class="portlet-body form">
                    <!-- BEGIN FORM-->
                    <form method="post" class="form-horizontal">
                        <div class="form-body">
                            {{ form.hidden('csrf_token',app.session.get('csrf_token')) }}
                            {{form.group_text('Name', 'name', object.getName|default(''), 3, 4, readonly)}}
                            {{ form.group_select('Matrix Value Type', 'amt_type', amt_opts, object.getIsAmountPercent|default('0'), 3, 4, readonly) }}
                            {{ form.group_checkbox('Retroactive','flag_retroactive', 'flag_retroactive', '',object.getIsRetroActive|default(false),3,4, false) }}
                            <a href="javascript:void(0)" class="btn default green add-matrix-field" style="margin: 0">Add Entry</a>
                            <table class="table table-striped table-bordered table-hover ignore" style="margin-top: 20px;" id="list_table">
                                <thead>
                                <tr>
                                    <th width="40px">From</th>
                                    <th width="40px">To</th>
                                    <th width="40px">Value</th>
                                    <th width="40px"></th>
                                </tr>
                                </thead>
                                <tbody id="matrix_tbody">
                                {% for e in object.getEntries %}
                                    <tr>
                                        <td><input type="number" name="from[]" class="form-control from text-right ignore" value="{{ e.getAmountFrom }}" min="1"></td>
                                        <td><input type="number" name="to[]" class="form-control to text-right ignore" value="{{ e.getAmountTo }}" min="1"></td>
                                        <td><input type="number" name="amount[]" class="form-control amount text-right ignore" value="{{ e.getTaxAmount }}" min="1"></td>
                                        <td><a href="javascript:void(0)" class="btn btn-xs default red remove_row ignore">Remove</a></td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>

                        <div class="form-actions fluid">
                            <div class="col-md-offset-3 col-md-9">
                                {% if not readonly %}
                                    <button type="submit" class="btn blue">Submit</button>
                                {% endif %}
                                <a href="{{ path(route_list) }}" class="btn default">Go back to list</a>
                            </div>
                        </div>
                    </form>
                    <!-- END FORM-->
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block js %}
    <script>

        function appendRowFields()
        {
            var field = '<tr>';
            field += '<td><input type="number" name="from[]" class="form-control from text-right ignore" min="1"></td>';
            field += '<td><input type="number" name="to[]" class="form-control to text-right ignore" min="1"></td>';
            field += '<td><input type="number" name="amount[]" class="form-control amount text-right ignore" min="1"></td>';
            field += '<td><a href="javascript:void(0)" class="btn btn-xs default red remove_row">Remove</a></td>';
            field += '</tr>';

            $('#matrix_tbody').append(field);

        }


        $(document).ready( function() {
            //set default error and success elements
            jQuery.validator.setDefaults({
                errorClass: 'help-block',
                errorElement: 'span',
                errorPlacement: function(error, element) {
                    if(element.parent().parent().hasClass('form-group'))
                    {
                        error.appendTo(element.parent().last());
                        element.parent().parent().addClass('has-error');
                    }
                    else if(element.parent().parent().hasClass('checker'))
                    {
                        error.appendTo(element.parent().parent().parent().parent().last());
                        element.parent().parent().parent().parent().parent().parent().addClass('has-error');
                    }
                    else if(element.parent().parent().hasClass('radio'))
                    {
                        error.appendTo(element.parent().parent().parent().parent().last());
                        element.parent().parent().parent().parent().parent().parent().addClass('has-error');
                    }
                    else
                    {
                        error.appendTo(element.parent().parent().last());
                        element.parent().parent().parent().addClass('has-error');
                    }
                },
                success: function(element) {
                    if(element.parent().parent().hasClass('form-group'))
                    {
                        element.parent().parent().removeClass('has-error');
                        element.parent().parent().addClass('has-success');
                    }
                    else if(element.parent().parent().hasClass('checker'))
                    {
                        element.parent().parent().parent().parent().parent().removeClass('has-error');
                        element.parent().parent().parent().parent().parent().addClass('has-success');
                    }
                    else if(element.parent().parent().hasClass('radio'))
                    {
                        element.parent().parent().parent().parent().parent().removeClass('has-error');
                        element.parent().parent().parent().parent().parent().addClass('has-success');
                    }
                    else
                    {
                        element.parent().parent().parent().removeClass('has-error');
                        element.parent().parent().parent().addClass('has-success');
                    }

                    element.remove();
                }
            });

            // validate form elements
            $(".form-horizontal").validate({
                onfocusout: function(element) {
                    this.element(element);
                },
                ignore: ".ignore",
                rules: {
                    name: "required",
                    tax: "required",
                },
                messages: {
                    name: "Name cannot be blank.",
                    tax: "Tax cannot be blank.",
                },
                submitHandler: function(form) {
                    var contents = {};
                    var duplicates = false;
                    $("#list_table tbody td [name^=amount]").each(function() {
                        var tdContent = $(this).val() * 1.00;
                        if (contents[tdContent.toFixed(2)]) {
                            duplicates = true;
                            return false;
                        }
                        contents[tdContent.toFixed(2)] = true;
                    });

                    if (duplicates)
                    {
                        toastr['error']('Check matrix table. Duplicate value entry!', 'Error');
                        return false;
                    }
                    else
                    {
                        form.submit();
                    }


                }
            });

            var add_button = $(".add-matrix-field");
            $(add_button).on('click',function(){
                appendRowFields();
            });

            $(document).on("click",".remove_row", function(e){
                e.preventDefault();
                var tr = $(this).closest('tr');
                tr.remove();
                return false;
            });
        });
    </script>
{% endblock %}
