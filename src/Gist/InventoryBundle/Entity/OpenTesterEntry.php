<?php

namespace Gist\InventoryBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

use Gist\CoreBundle\Template\Entity\HasGeneratedID;
use Gist\InventoryBundle\Template\Entity\HasProduct;
use Gist\InventoryBundle\Template\Entity\HasInventoryAccount;
use Doctrine\Common\Collections\ArrayCollection;
use Gist\CoreBundle\Template\Entity\TrackCreate;

/**
 * @ORM\Entity
 * @ORM\Table(name="inv_open_tester_items_entry")
 */
class OpenTesterEntry
{
    use HasGeneratedID;
    use HasProduct;
    use TrackCreate;

    /**
     * @ORM\Column(type="decimal", precision=10, scale=2)
     */
    protected $quantity;

    /**
     * @ORM\ManyToOne(targetEntity="\Gist\InventoryBundle\Entity\Account")
     * @ORM\JoinColumn(name="destination_inv_account_id", referencedColumnName="id")
     */
    protected $destination_inv_account;

    /**
     * @ORM\ManyToOne(targetEntity="\Gist\InventoryBundle\Entity\Account")
     * @ORM\JoinColumn(name="source_inv_account_id", referencedColumnName="id")
     */
    protected $source_inv_account;

    /**
     * @ORM\ManyToOne(targetEntity="\Gist\UserBundle\Entity\User")
     * @ORM\JoinColumn(name="opening_user", referencedColumnName="id")
     */
    protected $opening_user;

    /**
     * @ORM\ManyToOne(targetEntity="\Gist\UserBundle\Entity\User")
     * @ORM\JoinColumn(name="closing_user", referencedColumnName="id")
     */
    protected $closing_user;

    /** @ORM\Column(type="datetime", nullable=true) */
    protected $date_consumed;

    /**
     * @ORM\Column(type="string")
     */
    protected $remarks;

    /**
     * @ORM\Column(type="string")
     */
    protected $status;


    public function __construct()
    {
        $this->initHasGeneratedID();
        $this->debit = 0;
        $this->credit = 0;
        $this->initTrackCreate();
    }

    /**
     * Set quantity
     *
     * @param string $quantity
     *
     * @return OpenTesterEntry
     */
    public function setQuantity($quantity)
    {
        $this->quantity = $quantity;

        return $this;
    }

    /**
     * Get quantity
     *
     * @return string
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * Set dateConsumed
     *
     * @param \DateTime $dateConsumed
     *
     * @return OpenTesterEntry
     */
    public function setDateConsumed($dateConsumed)
    {
        $this->date_consumed = $dateConsumed;

        return $this;
    }

    /**
     * Get dateConsumed
     *
     * @return \DateTime
     */
    public function getDateConsumed()
    {
        return $this->date_consumed;
    }

    /**
     * Set remarks
     *
     * @param string $remarks
     *
     * @return OpenTesterEntry
     */
    public function setRemarks($remarks)
    {
        $this->remarks = $remarks;

        return $this;
    }

    /**
     * Get remarks
     *
     * @return string
     */
    public function getRemarks()
    {
        return $this->remarks;
    }

    /**
     * Set status
     *
     * @param string $status
     *
     * @return OpenTesterEntry
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Get status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Set destinationInvAccount
     *
     * @param \Gist\InventoryBundle\Entity\Account $destinationInvAccount
     *
     * @return OpenTesterEntry
     */
    public function setDestinationInvAccount(\Gist\InventoryBundle\Entity\Account $destinationInvAccount = null)
    {
        $this->destination_inv_account = $destinationInvAccount;

        return $this;
    }

    /**
     * Get destinationInvAccount
     *
     * @return \Gist\InventoryBundle\Entity\Account
     */
    public function getDestinationInvAccount()
    {
        return $this->destination_inv_account;
    }

    /**
     * Set sourceInvAccount
     *
     * @param \Gist\InventoryBundle\Entity\Account $sourceInvAccount
     *
     * @return OpenTesterEntry
     */
    public function setSourceInvAccount($sourceInvAccount = null)
    {
        $this->source_inv_account = $sourceInvAccount;

        return $this;
    }

    /**
     * Get sourceInvAccount
     *
     * @return \Gist\InventoryBundle\Entity\Account
     */
    public function getSourceInvAccount()
    {
        return $this->source_inv_account;
    }

    /**
     * Set openingUser
     *
     * @param \Gist\UserBundle\Entity\User $openingUser
     *
     * @return OpenTesterEntry
     */
    public function setOpeningUser($openingUser = null)
    {
        $this->opening_user = $openingUser;

        return $this;
    }

    /**
     * Get openingUser
     *
     * @return \Gist\UserBundle\Entity\User
     */
    public function getOpeningUser()
    {
        return $this->opening_user;
    }

    /**
     * Set closingUser
     *
     * @param \Gist\UserBundle\Entity\User $closingUser
     *
     * @return OpenTesterEntry
     */
    public function setClosingUser($closingUser = null)
    {
        $this->closing_user = $closingUser;

        return $this;
    }

    /**
     * Get closingUser
     *
     * @return \Gist\UserBundle\Entity\User
     */
    public function getClosingUser()
    {
        return $this->closing_user;
    }

    /**
     * @return \stdClass
     */
    public function toData()
    {
        $data = new \stdClass();

        $this->dataHasGeneratedID($data);
        $this->dataTrackCreate($data);
        $this->dataHasProduct($data);

        return $data;
    }
}
